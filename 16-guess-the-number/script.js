/**
 * Guess the number
 *
 * STEG 1
 * âœ… SÃ¤tt ett tal i en variabel.
 * âœ… Be anvÃ¤ndaren att gissa talet med hjÃ¤lp av `prompt()`.
 * âœ… Om anvÃ¤ndarens gissning Ã¤r fel, frÃ¥ga efter en ny gissning.
 * âœ… Om anvÃ¤ndarens gissning Ã¤r rÃ¤tt, visa en alert med ett grattis-meddelande.
 * âœ… Om anvÃ¤ndaren skriver in talet 0 sÃ¥ ska spelet avslutas.
 *
 * STEG 1.5
 * BerÃ¤tta fÃ¶r anvÃ¤ndaren om gissningen Ã¤r fÃ¶r lÃ¥g eller fÃ¶r hÃ¶g. Naturligtvis
 * ska de fÃ¥ gissa igen efter detta.
 *
 * STEG 2
 * Slumpa talet som anvÃ¤ndaren ska gissa, sÃ¥ att de inte gissar rÃ¤tt varje gÃ¥ng.
 *
 * STEG 3
 * Spara ner hur mÃ¥nga gissningar som krÃ¤vdes. Visa antalet gissningar nÃ¤r
 * anvÃ¤ndaren gissat rÃ¤tt.
 *
 * STEG 4
 * Efter att man gissat rÃ¤tt sÃ¥ slumpa fram ett nytt tal och starta om spelet
 * pÃ¥ nytt.
 * Spara en "highscore", dvs hur fÃ¥ gÃ¥nger som krÃ¤vts fÃ¶r att gissa rÃ¤tt.
 * Om anvÃ¤ndaren gissar rÃ¤tt pÃ¥ fler gÃ¥nger, visa "TyvÃ¤rr du gissade rÃ¤tt pÃ¥
 * ${tries} antal fÃ¶rsÃ¶k men din highscore Ã¤r ${highscore}".
 * Om anvÃ¤ndaren gissar rÃ¤tt pÃ¥ fÃ¤rre gÃ¥nger, visa "YAY NEW HIGHSCORE! ${highscore}"
 *
 */

const getRandomNumber = (max = 10) => {
	return Math.ceil( Math.random() * max );
}

let numberToGuess = 5;
let continueGame = true;

while (continueGame) {
	// Ask user for guess
	let guess = Number( prompt("Please guess a number between 1-10") );
	console.log("Guessed number:", guess, typeof guess);

	if (guess === numberToGuess) {
		// Guess was correct
		console.log("Guess was correct! ðŸ¥³");
		alert("Great success!");
		continueGame = false;

	} else if (guess === 0) {
		// User rage-quit
		console.log("Guess was 0, quitting game");
		alert("Y U GIVE UP?!");
		continueGame = false;

	}
}

console.log("Game ended");
